// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/": {
            "get": {
                "description": "Sample GET handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sample GET handler",
                "operationId": "index-get",
                "responses": {
                    "200": {
                        "description": "Positive response",
                        "schema": {
                            "$ref": "#/definitions/models.JSONSuccessResult"
                        }
                    },
                    "400": {
                        "description": "The request data could not be processed",
                        "schema": {
                            "$ref": "#/definitions/models.JSONFailureResult"
                        }
                    },
                    "404": {
                        "description": "The object was not found",
                        "schema": {
                            "$ref": "#/definitions/models.JSONNotFoundResult"
                        }
                    },
                    "500": {
                        "description": "An internal error has occurred, most likely due to an uncaught exception",
                        "schema": {
                            "$ref": "#/definitions/models.JSONFailureResult"
                        }
                    },
                    "503": {
                        "description": "An error has occurred, most likely due to an unavailable dependency",
                        "schema": {
                            "$ref": "#/definitions/models.JSONFailureResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.JSONFailureResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "correlation_id": {
                    "type": "string",
                    "example": "705e4dcb-3ecd-24f3-3a35-3e926e4bded5"
                },
                "data": {},
                "error": {
                    "type": "string",
                    "example": "There was an error processing the request"
                },
                "stacktrace": {
                    "type": "string"
                }
            }
        },
        "models.JSONNotFoundResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "correlation_id": {
                    "type": "string",
                    "example": "705e4dcb-3ecd-24f3-3a35-3e926e4bded5"
                },
                "data": {}
            }
        },
        "models.JSONSuccessResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "correlation_id": {
                    "type": "string",
                    "example": "705e4dcb-3ecd-24f3-3a35-3e926e4bded5"
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
